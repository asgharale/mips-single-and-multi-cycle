$date
	Tue Jun 03 16:10:33 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module dut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # Zero $end
$var wire 1 $ RegWrite $end
$var wire 1 % RegDst $end
$var wire 1 & PCWriteCond $end
$var wire 1 ' PCWrite $end
$var wire 2 ( PCSource [1:0] $end
$var wire 32 ) PC [31:0] $end
$var wire 1 * MemtoReg $end
$var wire 1 + MemWrite $end
$var wire 1 , MemRead $end
$var wire 32 - MemDataOut [31:0] $end
$var wire 32 . MemDataIn [31:0] $end
$var wire 1 / IorD $end
$var wire 32 0 Instr [31:0] $end
$var wire 1 1 IRWrite $end
$var wire 32 2 IR [31:0] $end
$var wire 2 3 ALUSrcB [1:0] $end
$var wire 1 4 ALUSrcA $end
$var wire 3 5 ALUControl [2:0] $end
$var wire 32 6 ALUAddr [31:0] $end
$scope module ctrl_unit $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # Zero $end
$var wire 32 7 IR [31:0] $end
$var parameter 4 8 BRANCH $end
$var parameter 4 9 DECODE $end
$var parameter 4 : FETCH $end
$var parameter 4 ; I_EXEC $end
$var parameter 4 < I_WRITE $end
$var parameter 4 = JUMP $end
$var parameter 4 > MEM_ACCESS $end
$var parameter 4 ? R_EXEC $end
$var parameter 4 @ R_WRITE $end
$var reg 3 A ALUControl [2:0] $end
$var reg 1 4 ALUSrcA $end
$var reg 2 B ALUSrcB [1:0] $end
$var reg 1 1 IRWrite $end
$var reg 1 / IorD $end
$var reg 1 , MemRead $end
$var reg 1 + MemWrite $end
$var reg 1 * MemtoReg $end
$var reg 2 C PCSource [1:0] $end
$var reg 1 ' PCWrite $end
$var reg 1 & PCWriteCond $end
$var reg 1 % RegDst $end
$var reg 1 $ RegWrite $end
$var reg 4 D next_state [3:0] $end
$var reg 4 E state [3:0] $end
$upscope $end
$scope module data_memory $end
$var wire 1 + MemWrite $end
$var wire 1 ! clk $end
$var wire 32 F read_data [31:0] $end
$var wire 32 G write_data [31:0] $end
$var wire 32 H address [31:0] $end
$upscope $end
$scope module dp $end
$var wire 3 I ALUControl [2:0] $end
$var wire 1 4 ALUSrcA $end
$var wire 2 J ALUSrcB [1:0] $end
$var wire 1 1 IRWrite $end
$var wire 32 K IR_out [31:0] $end
$var wire 1 / IorD $end
$var wire 32 L MemDataIn [31:0] $end
$var wire 32 M MemDataOut [31:0] $end
$var wire 1 , MemRead $end
$var wire 1 N MemReadOut $end
$var wire 1 + MemWrite $end
$var wire 1 O MemWriteOut $end
$var wire 1 * MemtoReg $end
$var wire 32 P PC [31:0] $end
$var wire 2 Q PCSource [1:0] $end
$var wire 1 ' PCWrite $end
$var wire 1 & PCWriteCond $end
$var wire 1 % RegDst $end
$var wire 1 $ RegWrite $end
$var wire 1 # Zero $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 R rd2 [31:0] $end
$var wire 32 S rd1 [31:0] $end
$var wire 5 T WriteReg [4:0] $end
$var wire 32 U WriteData [31:0] $end
$var wire 32 V SignImm [31:0] $end
$var wire 32 W Instr [31:0] $end
$var wire 1 X ALU_zero $end
$var wire 32 Y ALU_src_A [31:0] $end
$var wire 32 Z ALU_result [31:0] $end
$var wire 32 [ ALUAddr [31:0] $end
$var reg 32 \ ALUOut [31:0] $end
$var reg 32 ] ALU_src_B [31:0] $end
$var reg 32 ^ A_reg [31:0] $end
$var reg 32 _ B_reg [31:0] $end
$var reg 32 ` IR [31:0] $end
$var reg 32 a MDR [31:0] $end
$var reg 32 b PC_reg [31:0] $end
$scope module alu_inst $end
$var wire 32 c A [31:0] $end
$var wire 3 d ALUControl [2:0] $end
$var wire 32 e B [31:0] $end
$var wire 1 X Zero $end
$var reg 32 f Result [31:0] $end
$upscope $end
$scope module regfile_inst $end
$var wire 1 $ RegWrite $end
$var wire 1 ! clk $end
$var wire 5 g ra1 [4:0] $end
$var wire 5 h ra2 [4:0] $end
$var wire 32 i rd1 [31:0] $end
$var wire 32 j rd2 [31:0] $end
$var wire 5 k wa [4:0] $end
$var wire 32 l wd [31:0] $end
$var integer 32 m i [31:0] $end
$upscope $end
$upscope $end
$scope module instr_memory $end
$var wire 32 n address [31:0] $end
$var wire 32 o instr [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 @
b10 ?
b101 >
b1000 =
b110 <
b100 ;
b0 :
b1 9
b111 8
$end
#0
$dumpvars
b100000000000010000000000000011 o
b0 n
b100000 m
bx l
bx k
bx j
bx i
bx h
bx g
b100 f
b100 e
b0 d
b0 c
b0 b
bx a
bx `
bx _
bx ^
b100 ]
bx \
b0 [
b100 Z
b0 Y
0X
b100000000000010000000000000011 W
bx V
bx U
bx T
bx S
bx R
b0 Q
b0 P
0O
1N
bx M
bx L
bx K
b1 J
b0 I
b0 H
bx G
bx F
b0 E
b1 D
b0 C
b1 B
b0 A
bx 7
b0 6
b0 5
04
b1 3
bx 2
11
b100000000000010000000000000011 0
0/
bx .
bx -
1,
0+
0*
b0 )
b0 (
1'
0&
0%
0$
0#
1"
0!
$end
#5000
b1 T
b1 k
b11 V
b0 S
b0 i
b0 g
b0 R
b0 j
b1 h
b1 D
b1 3
b1 B
b1 J
11
1N
1,
1'
b100 U
b100 l
b100000000000010000000000000011 2
b100000000000010000000000000011 7
b100000000000010000000000000011 K
b100000000000010000000000000011 `
b100 \
1!
#10000
0!
0"
#15000
b1100 ]
b1100 e
b10000 Z
b10000 f
b100 D
b11 3
b11 B
b11 J
01
0N
0,
0'
b100 6
b100 H
b100 [
b100 Y
b100 c
b100000000000100000000000000100 0
b100000000000100000000000000100 W
b100000000000100000000000000100 o
b1 E
b100 )
b100 P
b100 n
b100 b
b0 -
b0 G
b0 M
b0 _
b0 ^
1!
#20000
0!
#25000
b11 Z
b11 f
b0 Y
b0 c
b11 ]
b11 e
14
b110 D
b10 3
b10 B
b10 J
b10000 U
b10000 l
b100 E
b10000 \
1!
#30000
0!
#35000
b100 Z
b100 f
b0 ]
b0 e
b100 Y
b100 c
1$
b0 D
b0 3
b0 B
b0 J
04
b11 U
b11 l
b110 E
b11 \
1!
#40000
0!
#45000
b1000 Z
b1000 f
b100 ]
b100 e
b1 D
1'
b1 3
b1 B
b1 J
11
1N
1,
0$
b100 U
b100 l
b0 E
b11 R
b11 j
b100 \
1!
#50000
0!
#55000
b11000 Z
b11000 f
b10 T
b10 k
b1000 6
b1000 H
b1000 [
b1000 Y
b1000 c
b1000100001100000100000 0
b1000100001100000100000 W
b1000100001100000100000 o
b1000 U
b1000 l
b10000 ]
b10000 e
b100 V
b0 R
b0 j
b10 h
b100 D
b11 3
b11 B
b11 J
01
0N
0,
0'
b1 E
b1000 )
b1000 P
b1000 n
b1000 b
b1000 \
b11 -
b11 G
b11 M
b11 _
b100000000000100000000000000100 2
b100000000000100000000000000100 7
b100000000000100000000000000100 K
b100000000000100000000000000100 `
1!
#60000
0!
#65000
b100 Z
b100 f
b0 Y
b0 c
b100 ]
b100 e
14
b110 D
b10 3
b10 B
b10 J
b11000 U
b11000 l
b100 E
b0 -
b0 G
b0 M
b0 _
b11000 \
1!
#70000
0!
#75000
b1000 Z
b1000 f
b0 ]
b0 e
b1000 Y
b1000 c
1$
b0 D
b0 3
b0 B
b0 J
04
b100 U
b100 l
b110 E
b100 \
1!
#80000
0!
#85000
b1100 Z
b1100 f
b100 ]
b100 e
b1 D
1'
b1 3
b1 B
b1 J
11
1N
1,
0$
b1000 U
b1000 l
b0 E
b100 R
b100 j
b1000 \
1!
#90000
0!
#95000
b110000010001100 Z
b110000010001100 f
b1100 6
b1100 H
b1100 [
b1100 Y
b1100 c
b0 0
b0 W
b0 o
b1100 U
b1100 l
b110000010000000 ]
b110000010000000 e
b1100000100000 V
b11 S
b11 i
b1 g
b10 D
b11 3
b11 B
b11 J
01
0N
0,
0'
b1 E
b1100 )
b1100 P
b1100 n
b1100 b
b1100 \
b100 -
b100 G
b100 M
b100 _
b1000100001100000100000 2
b1000100001100000100000 7
b1000100001100000100000 K
b1000100001100000100000 `
1!
#100000
0!
#105000
b111 Z
b111 f
b11 Y
b11 c
b100 ]
b100 e
14
b11 D
b0 3
b0 B
b0 J
b110000010001100 U
b110000010001100 l
b10 E
b11 ^
b110000010001100 \
1!
#110000
0!
#115000
b10000 Z
b10000 f
b11 T
b11 k
b1100 Y
b1100 c
1%
1$
b0 D
04
b111 U
b111 l
b11 E
b111 \
1!
#120000
0!
#125000
b10 T
b10 k
b1 D
1'
b1 3
b1 B
b1 J
11
1N
1,
0$
0%
b10000 U
b10000 l
b0 E
b10000 \
1!
#130000
0!
#135000
b0 T
b0 k
b0 ]
b0 e
b10000 6
b10000 H
b10000 [
b10000 Y
b10000 c
b11111100000000000000000000000000 0
b11111100000000000000000000000000 W
b11111100000000000000000000000000 o
b0 V
b0 S
b0 i
b0 g
b0 R
b0 j
b0 h
b10 D
b11 3
b11 B
b11 J
01
0N
0,
0'
b1 E
b10000 )
b10000 P
b10000 n
b10000 b
b0 2
b0 7
b0 K
b0 `
1!
#136000
